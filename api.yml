swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Excursions
  description: Ruby on Rails + Postgres
  license:
    name: Software Architecture 2019-I
host: 192.168.99.101:3000
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /suppliers:
    post:
      summary: Creates a new supplier
      operationId: createSupplier
      parameters:
        - name: supplier
          in: body
          required: true
          description: Supplier Object
          schema:
            $ref: '#/definitions/Supplier'
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable_entity
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all suppliers
      operationId: getAllSuppliers
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CoursesList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /courses/{code}:
    get:
      summary: Returns a course with the given code
      operationId: getCourseByCode
      parameters:
        - name: code
          in: path
          description: The code of the course to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Course'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a course with the given code
      operationId: updateCourse
      parameters:
        - name: code
          in: path
          description: The code of the course to be updated
          required: true
          type: integer
        - name: course
          in: body
          required: true
          description: Course Object
          schema:
            $ref: '#/definitions/CourseInput'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a course with the given code
      operationId: deleteCourse
      parameters:
        - name: code
          in: path
          description: The code of the course to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Suppliers
  Supplier:
    type: object
    properties:
      Nit:
        type: integer
      Razon:
        type: string
      Telefono:
        type: string
      Correo:
        type: string
      Ubicacion:
        type: string

  CourseInput:
    type: object
    properties:
      name:
        type: string
      credits:
        type: integer

  CoursesList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Course'

# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object
